# Resumen Detallado: Implantación de Sistemas Operativos - Unidad 5

## **Introducción**

La Unidad 5 de "Implantación de Sistemas Operativos" aborda aspectos fundamentales para la administración segura y eficiente de sistemas informáticos, centrándose en tres pilares interconectados: la gestión de usuarios y permisos, la administración de dominios, y la seguridad informática. Estos componentes son esenciales para garantizar el correcto funcionamiento de los sistemas operativos en entornos tanto personales como empresariales, protegiendo la información y facilitando la gestión centralizada de recursos.

## **Gestión de Usuarios y Permisos**

### **Concepto de Usuario**

Un usuario es una entidad (persona o servicio) que puede acceder al sistema operativo mediante credenciales específicas. Cada usuario tiene un identificador único (ID), un nombre de usuario y generalmente una contraseña asociada.

- **Usuarios locales:** Existen y se autentican solo en el sistema local.
- **Usuarios de red:** Gestionados y autenticados a través de servidores centrales (como Active Directory en Windows o LDAP en entornos Unix).

### **Tipos de Usuarios**

- **Administrador/root:** Cuenta con privilegios completos sobre el sistema.
- **Usuarios estándar:** Tienen permisos limitados, adecuados para el uso diario.
- **Usuarios invitados:** Cuentan con permisos muy restringidos, para accesos temporales.
- **Usuarios de servicio:** Creados específicamente para que ciertos programas o servicios accedan a recursos del sistema.

### **Gestión de Usuarios en Windows**

- **Herramientas gráficas:** 
  - Panel de control > Cuentas de usuario
  - Configuración > Cuentas
  - Administrador de equipos (compmgmt.msc)

- **Comandos:**
  ```cmd
  net user usuario1 /add          # Crear usuario
  net user usuario1 Contraseña123 # Cambiar contraseña
  net user usuario1 /delete       # Eliminar usuario
  net localgroup Administradores usuario1 /add  # Añadir a grupo
  ```

### **Gestión de Usuarios en Linux/Unix**

- **Archivos principales:** `/etc/passwd` (información de usuarios), `/etc/shadow` (contraseñas cifradas), `/etc/group` (información de grupos).

- **Comandos:**
  ```bash
  sudo adduser maria             # Crear usuario interactivamente
  sudo useradd -m -s /bin/bash juan  # Crear usuario con directorio home y shell
  sudo passwd maria              # Cambiar contraseña
  sudo userdel -r maria          # Eliminar usuario y su directorio home
  ```

### **Gestión de Grupos**

Los grupos permiten administrar permisos colectivos de manera eficiente, agrupando usuarios que comparten necesidades de acceso similares.

- **Windows:**
  ```cmd
  net localgroup Ventas /add                # Crear grupo
  net localgroup Ventas usuario1 /add       # Añadir usuario al grupo
  net localgroup Ventas usuario1 /delete    # Eliminar usuario del grupo
  ```

- **Linux:**
  ```bash
  sudo groupadd desarrollo                 # Crear grupo
  sudo usermod -aG desarrollo maria        # Añadir usuario al grupo
  sudo gpasswd -d maria desarrollo         # Eliminar usuario del grupo
  ```

### **Permisos y Control de Acceso**

#### **Permisos en Windows**

- **Permisos NTFS:** Sistema de permisos para archivos y carpetas en sistemas con formato NTFS.
  - **Permisos básicos:** Control total, Modificar, Leer y ejecutar, Listar contenido, Leer, Escribir.
  - **Permisos avanzados:** Más granulares, incluyendo permisos específicos como "Crear archivos", "Crear carpetas", etc.
  - **Herencia:** Los permisos pueden heredarse de carpetas superiores.

- **Configuración mediante GUI:** Propiedades del archivo/carpeta > Seguridad > Editar
- **Configuración mediante PowerShell:**
  ```powershell
  Get-Acl -Path "C:\datos" | Format-List  # Ver permisos
  $acl = Get-Acl -Path "C:\datos"
  $permission = "Usuario1","Modify","Allow"
  $accessRule = New-Object System.Security.AccessControl.FileSystemAccessRule $permission
  $acl.SetAccessRule($accessRule)
  $acl | Set-Acl -Path "C:\datos"  # Aplicar permisos
  ```

#### **Permisos en Linux/Unix**

- **Permisos tradicionales:** Sistema basado en los permisos de Lectura (r), Escritura (w) y Ejecución (x) para tres categorías: propietario, grupo y otros.
  
  Representación numérica:
  - 4: Lectura (r)
  - 2: Escritura (w)
  - 1: Ejecución (x)

- **Comandos:**
  ```bash
  chmod 750 documento.txt           # rwxr-x---
  chown maria:ventas documento.txt  # Cambiar propietario y grupo
  chmod g+w documento.txt           # Añadir permiso de escritura al grupo
  ```

- **Permisos especiales:**
  - **SUID (4000):** Ejecuta el archivo con los permisos del propietario.
  - **SGID (2000):** Ejecuta con los permisos del grupo o hereda el grupo en directorios.
  - **Sticky bit (1000):** Solo el propietario puede borrar o renombrar archivos en un directorio.

## **Administración de Dominios**

### **Conceptos de Dominio**

Un dominio es un conjunto de ordenadores en red que comparten una base de datos de directorio común y políticas de seguridad centralizadas.

**Características principales:**
- Administración centralizada de usuarios y recursos
- Políticas de seguridad uniformes
- Autenticación única (Single Sign-On)
- Base de datos de directorio compartida

### **Diferencias entre Grupo de Trabajo y Dominio**

| **Característica** | **Grupo de Trabajo** | **Dominio** |
|-------------------|----------------------|-------------|
| **Administración** | Descentralizada (cada equipo se administra localmente) | Centralizada (a través del controlador de dominio) |
| **Base de datos de usuarios** | Local en cada equipo | Centralizada en Active Directory |
| **Autenticación** | Local | Centralizada |
| **Escalabilidad** | Limitada (redes pequeñas) | Alta (miles de equipos) |
| **Seguridad** | Básica | Avanzada (políticas de grupo, seguridad por capas) |
| **Complejidad** | Simple | Requiere planificación y conocimientos técnicos |

### **Active Directory**

Active Directory (AD) es un servicio de directorio desarrollado por Microsoft que almacena información sobre objetos en la red y hace esta información fácilmente accesible para administradores y usuarios.

#### **Componentes principales:**

1. **Objetos:** Elementos individuales como usuarios, grupos, equipos, impresoras, etc.
2. **Dominios:** Agrupación lógica de objetos que comparten la misma base de datos de directorio.
3. **Árboles:** Conjunto de dominios que comparten un espacio de nombres contiguo.
4. **Bosque:** Conjunto de árboles que comparten información del directorio pero no necesariamente un espacio de nombres contiguo.
5. **Unidades Organizativas (OU):** Contenedores para organizar objetos dentro de un dominio.
6. **Controladores de Dominio (DC):** Servidores que ejecutan Active Directory Domain Services (AD DS) y almacenan copias de la base de datos del directorio.

#### **Estructura Lógica de Active Directory**

La estructura lógica facilita la organización y administración de recursos:

1. **Dominios:** Unidad fundamental de replicación y seguridad.
   - Ejemplo: `empresa.local`

2. **Árboles de Dominio:** Agrupación jerárquica de dominios con espacio de nombres contiguo.
   - Ejemplo: `empresa.local` (dominio raíz)
     - `ventas.empresa.local` (subdominio)
     - `produccion.empresa.local` (subdominio)

3. **Unidades Organizativas (OUs):** Contenedores para organizar objetos.
   - Ejemplo: OU=Ventas, OU=RRHH, OU=TI

#### **Estructura Física de Active Directory**

1. **Controladores de Dominio:** Servidores que almacenan y gestionan la base de datos de AD.
2. **Sitios:** Agrupaciones de redes IP bien conectadas (generalmente LANs).
3. **Subredes:** Divisiones de la red que pertenecen a un sitio específico.
4. **Enlaces de Sitio:** Conexiones lógicas entre sitios que definen cómo se realiza la replicación.

#### **Roles FSMO (Flexible Single Master Operation)**

Funciones especiales que solo pueden ser realizadas por un controlador de dominio específico:

1. **Maestro de Esquema:** Controla todas las actualizaciones al esquema.
2. **Maestro de Denominación de Dominios:** Controla la adición o eliminación de dominios en el bosque.
3. **Maestro de RID (Relative Identifier):** Asigna bloques de identificadores relativos.
4. **Emulador de PDC (Primary Domain Controller):** Procesa cambios de contraseñas y proporciona sincronización de tiempo.
5. **Maestro de Infraestructura:** Actualiza referencias entre objetos de diferentes dominios.

## **Seguridad en Sistemas Operativos**

### **Principios Fundamentales de Seguridad (Tríada CIA)**

- **Confidencialidad:** Garantizar que la información solo sea accesible por personal autorizado.
- **Integridad:** Asegurar que la información no ha sido alterada sin autorización.
- **Disponibilidad:** Permitir que los usuarios autorizados tengan acceso a la información cuando la necesiten.

### **Políticas de Contraseñas y Seguridad**

- **Características de contraseñas seguras:**
  - Longitud mínima (recomendado 12+ caracteres)
  - Complejidad (mayúsculas, minúsculas, números, símbolos)
  - Sin patrones obvios o información personal

- **Configuración en Windows:**
  ```powershell
  # Mediante Directivas de seguridad local (secpol.msc)
  # O mediante PowerShell:
  net accounts /minpwlen:12 /maxpwage:60 /uniquepw:5
  ```

- **Configuración en Linux:**
  ```bash
  # Editar /etc/login.defs para políticas básicas
  # Para configuraciones más avanzadas, usar PAM:
  sudo apt install libpam-pwquality
  # Editar /etc/security/pwquality.conf
  ```

### **Autenticación y Autorización**

- **Factores de autenticación:**
  - **Algo que sabes:** Contraseña, PIN
  - **Algo que tienes:** Tarjeta inteligente, token, teléfono
  - **Algo que eres:** Huella dactilar, reconocimiento facial

- **Autenticación multifactor (MFA):** Combina dos o más factores para mayor seguridad.

- **Modelos de control de acceso:**
  - **Discrecional (DAC):** El propietario decide quién accede (típico en sistemas de archivos).
  - **Obligatorio (MAC):** Un administrador central define políticas (usado en entornos de alta seguridad).
  - **Basado en Roles (RBAC):** Los permisos se asignan a roles, y los usuarios a roles (común en entornos empresariales).

### **Protección contra Malware**

- **Tipos de malware:**
  - **Virus:** Se adjunta a programas legítimos
  - **Gusanos:** Se propagan automáticamente por redes
  - **Troyanos:** Se disfrazan de software legítimo
  - **Ransomware:** Cifra archivos y exige rescate
  - **Spyware:** Recopila información sin consentimiento

- **Protección:**
  - Mantener el sistema actualizado
  - Utilizar software antivirus/antimalware
  - Implementar firewalls
  - Realizar copias de seguridad regulares
  - Educar a los usuarios sobre amenazas

### **Firewalls y Sistemas de Detección de Intrusiones**

- **Tipos de firewalls:**
  - **Filtro de paquetes:** Examina encabezados de paquetes
  - **Con estado (Stateful):** Rastrea conexiones activas
  - **Capa de aplicación (Proxy):** Inspecciona contenido de paquetes
  - **Next-Generation Firewalls (NGFW):** Combinan múltiples funcionalidades

- **Configuración básica de firewall en Windows:**
  ```powershell
  # Habilitar firewall
  Set-NetFirewallProfile -Profile Domain,Public,Private -Enabled True
  
  # Crear regla para permitir tráfico
  New-NetFirewallRule -DisplayName "Permitir SSH" -Direction Inbound -Protocol TCP -LocalPort 22 -Action Allow
  ```

- **Configuración básica de firewall en Linux (UFW):**
  ```bash
  sudo ufw enable
  sudo ufw allow ssh
  sudo ufw allow 80/tcp
  ```

- **Sistemas de Detección de Intrusiones (IDS):**
  - **HIDS (Host-based IDS):** Monitorea actividad en un host específico
  - **NIDS (Network-based IDS):** Monitorea el tráfico de red

## **Hardening de Sistemas Operativos**

El hardening consiste en fortalecer la seguridad del sistema operativo mediante la eliminación de vulnerabilidades y la implementación de controles de seguridad.

### **Técnicas de Hardening**

- **Desactivar servicios innecesarios:**
  ```powershell
  # Windows
  Get-Service | Where-Object {$_.StartType -eq "Automatic" -and $_.Status -eq "Running"}
  Set-Service -Name "NombreServicio" -StartupType Disabled
  ```
  ```bash
  # Linux
  systemctl list-unit-files --state=enabled
  sudo systemctl disable servicio_innecesario
  ```

- **Aplicar actualizaciones de seguridad:**
  ```powershell
  # Windows
  Install-WindowsUpdate -AcceptAll
  ```
  ```bash
  # Linux
  sudo apt update && sudo apt upgrade -y
  ```

- **Configurar registros de auditoría:**
  ```powershell
  # Windows
  auditpol /set /category:"System","Logon/Logoff" /success:enable /failure:enable
  ```
  ```bash
  # Linux
  sudo apt install auditd
  sudo auditctl -w /etc/passwd -p wa -k user-modify
  ```

## **Automatización y Herramientas de Gestión**

### **Windows:**

- **PowerShell para automatización:**
  ```powershell
  # Script para crear múltiples usuarios desde un CSV
  Import-Csv usuarios.csv | ForEach-Object {
      $username = $_.Username
      $password = ConvertTo-SecureString $_.Password -AsPlainText -Force
      New-LocalUser -Name $username -Password $password
      Add-LocalGroupMember -Group $_.Group -Member $username
  }
  ```

- **Directivas de grupo (GPO):** Para aplicar configuraciones de forma centralizada en entornos de dominio.

### **Linux:**

- **Scripts shell:**
  ```bash
  #!/bin/bash
  # Script para crear usuarios desde un archivo
  while IFS=, read -r username group
  do
    useradd -m -s /bin/bash $username
    usermod -aG $group $username
    echo "$username:Temp123!" | chpasswd
    passwd -e $username  # Forzar cambio de contraseña en primer inicio
  done < usuarios.txt
  ```

- **Herramientas de gestión centralizada:**
  - Ansible
  - Puppet
  - Chef

## **Buenas Prácticas en Seguridad y Administración**

1. **Principio del mínimo privilegio:** Asignar solo los permisos estrictamente necesarios.

2. **Defensa en profundidad:** Implementar múltiples capas de seguridad.

3. **Segmentación:** Dividir la red en zonas con diferentes niveles de confianza.

4. **Auditoría y monitorización:** Registrar y revisar regularmente eventos de seguridad.

5. **Copias de seguridad:** Realizar copias de seguridad periódicas y verificar su restauración.

6. **Documentación:** Mantener documentación actualizada de la infraestructura y configuraciones.

7. **Formación:** Educar a los usuarios sobre amenazas y buenas prácticas de seguridad.

8. **Actualización:** Mantener sistemas y aplicaciones actualizados con los últimos parches de seguridad.

## **Conclusión**

La Unidad 5 de "Implantación de Sistemas Operativos" proporciona una base sólida para la administración segura de sistemas informáticos, abarcando desde la gestión básica de usuarios y permisos hasta la implementación de dominios y la aplicación de medidas de seguridad avanzadas. La integración de estos conocimientos es fundamental para crear entornos informáticos robustos, seguros y eficientes, adaptados a las necesidades específicas de cada organización.

La administración de sistemas modernos requiere un enfoque holístico que combine la gestión eficiente de usuarios y permisos, la implementación adecuada de estructuras de dominio cuando sea necesario, y la aplicación consistente de medidas de seguridad en todos los niveles. Este enfoque integrado es la clave para proteger los activos informáticos y garantizar la continuidad operativa en cualquier entorno.