# RESUMEN EXTENDIDO: CLASE DE GESTIÓN DE BASES DE DATOS (19/05/2025)

Esta clase constituye un punto de transición en el curso, completando la unidad 2 sobre el modelo entidad-relación (modelo conceptual) e introduciendo la unidad 3 sobre el modelo relacional (modelo lógico). A continuación, presento un resumen detallado con ejemplos de los conceptos tratados.

## 1. Finalización de la Unidad 2: Modelo Conceptual

### Elección de Claves Primarias

La clase comienza completando el último tema de la unidad 2, centrado en la elección adecuada de claves primarias:

**Criterios para seleccionar una clave primaria:**

- **Eficiencia técnica**: Preferir atributos cortos para optimizar consultas (ejemplo: código de empleado vs. DNI)
- **Relevancia semántica**: Escoger el atributo que tenga mayor significado en el contexto de la base de datos
- **Unicidad**: Garantizar que identifique unívocamente cada instancia
- **Tipo de dato adecuado**: Preferentemente fechas, números enteros o texto corto de tamaño fijo
- **Cuando usar fechas**: Considerar si solo se necesita la fecha (día/mes/año) o también la hora
- **Tamaño mínimo**: Entre atributos candidatos, elegir el de menor tamaño
- **Creación de identificadores**: Si no hay un atributo adecuado, crear un ID autoincremental

El profesor menciona que la elección de clave primaria no es definitiva, ya que puede modificarse al transformar el modelo conceptual al lógico según nuevas necesidades o consideraciones.

## 2. Introducción al Modelo Relacional (Unidad 3)

### Niveles de Abstracción en Bases de Datos

El profesor sitúa el modelo relacional en el esquema general de niveles de abstracción:

```
Nivel 1: Mundo real / Minimundo (enunciado del problema)
    ↓
Nivel 2: Modelo Conceptual (entidades y relaciones)
    ↓
Nivel 3: Modelo Lógico (tablas y relaciones en SQL) ← ESTAMOS AQUÍ
    ↓
Nivel 4: Modelo Físico (implementación en disco)
```

### Fundamentos del Modelo Relacional

- **Origen**: Propuesto por un matemático de IBM
- **Base teórica**: Fundamentado en teoría de conjuntos y lógica de predicados
- **Características principales**:
  - **Independencia lógica**: Separación entre niveles de abstracción
  - **Independencia física**: Posibilidad de cambiar el almacenamiento sin afectar la estructura lógica
  - **Flexibilidad**: Alto grado de adaptabilidad a diferentes entornos y necesidades
  - **Uniformidad**: Estructura consistente basada en reglas matemáticas
  - **Sencillez**: Modelo relativamente simple de entender y aplicar

### Las 12 Reglas del Modelo Relacional

El profesor menciona las 12 reglas fundamentales propuestas por el creador del modelo relacional:

1. **Regla de la información**: Toda la información debe estar representada explícitamente
2. **Regla de acceso garantizado**: Cualquier dato debe ser accesible por su clave primaria
3. **Regla de tratamiento sistemático de valores nulos**: Manejo coherente de información desconocida
4. **Catálogo dinámico en línea**: Los metadatos también se almacenan como tablas
5. **Lenguaje comprensivo de datos**: Un único lenguaje (SQL) para todas las operaciones
6. **Regla de actualización de vistas**: Las vistas deben actualizarse automáticamente
7. **Inserciones, modificaciones y eliminaciones de alto nivel**: Manipulación de conjuntos de datos
8. **Independencia física**: Cambios en el almacenamiento no afectan a aplicaciones
9. **Independencia lógica**: Cambios en tablas lógicas no afectan a aplicaciones
10. **Independencia de integridad**: Reglas de integridad separadas de las aplicaciones
11. **Independencia de la distribución**: Ubicación de datos transparente para usuarios
12. **No subversión**: No debe haber formas de saltarse las reglas de integridad

## 3. Estructura del Modelo Relacional

### Componentes Básicos

**Tabla o Relación**:
- Es el elemento fundamental del modelo relacional
- En el contexto matemático, se denomina "relación"
- En el contexto práctico, se denomina "tabla"

**Estructura**:
- **Columnas**: Representan los atributos (campos)
- **Filas**: Representan las tuplas (instancias, registros)

**Ejemplo de tabla "Coches"**:
```
| Matrícula | Marca    | Modelo | Color  |
|-----------|----------|--------|--------|
| 1234ABC   | Seat     | Ibiza  | Rojo   |
| 5678DEF   | VW       | Polo   | Verde  |
| 9012GHI   | Renault  | Clio   | Azul   |
```

### Terminología Formal vs. Práctica

El profesor diferencia entre la terminología matemática formal y la terminología práctica:

| Concepto Matemático | Término Práctico |
|---------------------|------------------|
| Relación            | Tabla            |
| Tupla               | Fila             |
| Atributo            | Columna          |
| Cardinalidad        | Número de filas  |
| Grado               | Número de columnas|

### Representación de Tablas

Se presentan tres formas de representar tablas en el modelo relacional:

**1. Representación formal matemática**:
```
R(A₁, A₂, ..., Aₙ) donde R es la relación y A₁...Aₙ son los atributos
```

**2. Representación gráfica (diagrama)**:
- Tablas con filas que representan los atributos
- Claves primarias en negrita/subrayado
- Claves foráneas señaladas con FK
- Relaciones entre tablas indicadas con líneas conectoras

**3. Representación textual**:
```
TABLA(atributo1, atributo2, atributo3, ...)
```
Donde los atributos en negrita y subrayado son claves primarias.

### Dominios y Tipos de Datos

El profesor explica que cada atributo pertenece a un dominio específico:

- **Dominio**: Rango de valores posibles para un atributo
- **Características**:
  - Todos los valores de un atributo deben pertenecer al mismo dominio
  - Los valores deben ser atómicos (no divisibles)
  - Varios atributos pueden compartir el mismo dominio
  - Al definir un atributo se especifica su nombre, tipo de dato y formato

**Ejemplo**:
- Atributo: Sueldo
- Descripción: Sueldo neto del empleado
- Tipo de dato: INTEGER (entero)
- Formato: #.###,## €

### El Valor Nulo (NULL)

Se dedica una sección especial al valor nulo, fundamental en bases de datos relacionales:

- **Definición**: Representa un valor desconocido, ausente, pero válido
- **Casos de uso**:
  - Valores temporalmente desconocidos
  - Datos no aplicables (ej: sueldo para un estudiante)
  - Valores opcionales no proporcionados
- **Operaciones con nulos**:
  - No se pueden realizar operaciones aritméticas (2 + NULL = NULL)
  - Se pueden realizar operaciones lógicas siguiendo reglas específicas

**Tablas de verdad con NULL**:
```
Operador AND:
TRUE AND NULL = NULL
FALSE AND NULL = FALSE
NULL AND NULL = NULL

Operador OR:
TRUE OR NULL = TRUE
FALSE OR NULL = NULL
NULL OR NULL = NULL

Operador NOT:
NOT NULL = NULL
```

### Tipos de Tablas

Se explican los distintos tipos de tablas en el modelo relacional:

**1. Por persistencia**:
- **Persistentes**: Creadas y gestionadas por usuarios
- **Temporales**: Creadas y eliminadas automáticamente por el sistema

**2. Tipos de tablas persistentes**:
- **Tablas base**: 
  * Creadas explícitamente con estructura y datos
  * Existen por sí mismas y reflejan entidades reales
  * Contienen tanto datos como metadatos

- **Tablas vista**:
  * Almacenan solo la definición de una consulta
  * Sus datos proceden de otras tablas
  * Se actualizan automáticamente cuando cambian las tablas base
  * Ventaja de seguridad: evitan que los usuarios manipulen directamente las tablas base

- **Tablas instantánea**:
  * Similar a las vistas, pero no se actualizan en tiempo real
  * Se refrescan periódicamente (como una "fotografía" de los datos en un momento dado)

### Tipos de Claves

Finalmente, el profesor menciona los diferentes tipos de claves en el modelo relacional:

- **Claves candidatas**: Atributos que pueden identificar unívocamente una tupla
- **Clave compuesta**: Clave candidata formada por varios atributos
- **Clave primaria**: La clave candidata seleccionada como identificador principal
- **Clave alternativa**: Claves candidatas no seleccionadas como primarias
- **Clave ajena/foránea**: Atributo(s) que relacionan una tabla con otra

## 4. Próximos Pasos del Curso

El profesor anticipa los temas de las próximas clases:

- **Tutoría siguiente**: Ejercicios de agregación y relaciones ternarias del modelo conceptual
- **Próxima semana**: 
  - Introducción a SQL para creación y modificación de tablas
  - Transformación del modelo conceptual al modelo lógico (cómo transformar entidades y relaciones en tablas SQL)
  - Implementación práctica con un editor SQL

## Ejemplos Ilustrativos

### Ejemplo 1: Selección de clave primaria
**Escenario**: Base de datos de empleados donde podemos usar DNI o código interno.
- **Mejor elección**: Código interno (más corto, más relevante para la empresa)

### Ejemplo 2: Tabla de estudiantes y cursos
```
ESTUDIANTE(código_estudiante, nombre, apellidos, email)
CURSO(código_curso, nombre, créditos)
MATRÍCULA(fk_código_estudiante, fk_código_curso, fecha, calificación)
```

### Ejemplo 3: Manejo de valores nulos
**Escenario**: Una universidad con profesores y estudiantes donde ambos se registran como "personal".
- El campo "sueldo" contendría NULL para los estudiantes, ya que no es aplicable.

### Ejemplo 4: Relación entre tablas mediante claves foráneas
```
COCHES(matrícula, marca, modelo, color)
ITV(id_inspección, fk_matrícula, centro_itv, resultado, fecha, precio)
```
Donde la matrícula en la tabla ITV es una clave foránea que referencia a la tabla COCHES.

## Conclusión

Esta clase marca una transición fundamental del modelo conceptual al modelo lógico, estableciendo las bases teóricas del modelo relacional antes de entrar en la implementación práctica con SQL. El profesor enfatiza que, aunque esta parte teórica es más "densa", es necesaria para comprender adecuadamente la estructura que sustentará el trabajo práctico con bases de datos relacionales en las próximas sesiones.
