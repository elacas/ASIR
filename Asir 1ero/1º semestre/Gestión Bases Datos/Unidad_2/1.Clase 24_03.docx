# Resumen: Modelo Relacional e Introducción a SQL en ASIR

## 1. Modelo Relacional: Conceptos fundamentales

La primera parte de la clase se centra en profundizar en la teoría detrás del modelo relacional, que es el fundamento de las bases de datos relacionales:

### Historia y Fundamentos Teóricos
- El modelo relacional fue propuesto por un matemático de IBM en 1970.
- Tiene base matemática sólida (teoría de conjuntos y lógica de predicados).
- Esta fundamentación matemática garantiza la consistencia, seguridad y robustez de las bases de datos relacionales.

### Proceso de Diseño de Bases de Datos
La clase repasa el proceso de abstracción para diseñar bases de datos:

1. **Del mundo real al modelo conceptual**:
   - Identificar datos necesarios y propósitos del sistema
   - Los sustantivos suelen convertirse en entidades
   - Los verbos suelen transformarse en relaciones

2. **Modelo Conceptual**:
   - Representado mediante diagrama entidad-relación
   - Entidades (rectángulos), atributos (elipses) y relaciones (rombos)
   - Definición de cardinalidades entre entidades

3. **Modelo Lógico**:
   - Transformación del modelo conceptual a estructuras de tablas
   - Normalización para eliminar redundancias y garantizar consistencia

### Ejemplo Práctico
Se utiliza un ejemplo de una base de datos de vehículos y propietarios:
- **Entidades**: Coches y Propietarios
- **Relación**: Un propietario puede tener varios vehículos y un vehículo puede pertenecer a varios propietarios (N:M)
- **Solución**: Se crea una tabla intermedia que relaciona ambas entidades

## 2. Introducción a SQL

La segunda parte de la clase introduce el lenguaje SQL, herramienta fundamental para implementar y manipular las bases de datos relacionales:

### Características de SQL
- Desarrollado por IBM en los años 70
- Estándar mundial para manipular bases de datos relacionales
- **Ventajas**: Facilidad de uso, flexibilidad y alto grado de estandarización
- **Relevancia laboral**: Alta demanda de profesionales con conocimientos de SQL

### Elementos Básicos de SQL

#### Identificadores
Son los nombres asignados a los objetos de la base de datos:
- Deben comenzar con letras (no con números ni caracteres especiales)
- Pueden contener letras, números y guiones bajos
- No pueden coincidir con palabras reservadas del lenguaje
- Convención sugerida: tablas en plural, atributos en singular
- Importancia de usar nombres descriptivos y coherentes

#### Tipos de Datos
El profesor explica los tipos de datos fundamentales en SQL:

1. **Numéricos**:
   - **Enteros (INT)**: Para números sin decimales
   - **Decimales (DECIMAL)**: Con precisión definida, ej: DECIMAL(5,2) para números hasta 999.99

2. **Texto**:
   - **CHAR**: Longitud fija, ej: CHAR(30) para textos de exactamente 30 caracteres
   - **VARCHAR**: Longitud variable, ej: VARCHAR(50) para textos hasta 50 caracteres
   - **TEXT**: Para textos largos (comentarios, descripciones extensas)

3. **Fechas y Horas**:
   - **DATE**: Solo fecha
   - **TIME**: Solo hora
   - **DATETIME**: Fecha y hora
   - **TIMESTAMP**: Fecha, hora y zona horaria

4. **Booleanos**:
   - Para valores binarios (verdadero/falso)

**Consideración práctica**: El profesor aconseja almacenar fechas de nacimiento en lugar de edades, ya que las edades cambian con el tiempo y requerirían actualizaciones constantes.

### Recomendación sobre Optimización
El profesor explica por qué existen varios tipos de datos para texto (CHAR, VARCHAR, TEXT), destacando que se trata de una cuestión de optimización de almacenamiento:
- Cada tipo reserva diferente cantidad de espacio
- Usar tipos adecuados evita desperdicio de recursos
- Ejemplo: No usar TEXT para almacenar nombres que nunca superarán los 50 caracteres

## 3. Nota sobre Centros de Procesamiento de Datos (CPDs)

Como intermedio en la clase, el profesor muestra un vídeo sobre CPDs submarinos, explicando:
- Microsoft y otras empresas están sumergiendo centros de datos en el océano
- **Ventajas**: Refrigeración natural (mejor disipación de calor en agua que en aire), menor consumo energético
- **Caso similar**: Las centrales nucleares se ubican cerca de ríos para aprovechar el agua como refrigerante

## 4. Plan para Próximas Sesiones

El profesor anuncia que en la próxima tutoría:
- Se trabajará con MySQL para crear una base de datos sencilla
- Se crearán tablas definiendo tipos de datos
- Se practicará la manipulación de datos
- Se continuará con la teoría del modelo relacional, pero alternando con práctica para hacer las clases más dinámicas

La clase concluye con una nota sobre la compatibilidad entre diferentes servidores de bases de datos, indicando que aunque existen pequeñas diferencias de implementación entre sistemas, el SQL es mayoritariamente estándar y transferible entre plataformas.