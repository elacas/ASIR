

# Resumen: Introducción a Bases de Datos y SGBD

## 1. Conceptos básicos de bases de datos

Las bases de datos son sistemas que permiten almacenar información con **máxima integridad y mínima redundancia**. Sus principales características son:

* **Integridad**: Garantiza que los datos no se corrompan aunque se realicen múltiples consultas.
* **Mínima redundancia**: Permite realizar consultas complejas sin tener que repetir operaciones.
* **Facilidad de compartición**: Permite distribuir la información de manera eficiente.
* **Independencia de aplicaciones**: Las bases de datos pueden ser accedidas desde distintas aplicaciones, independientemente del lenguaje o sistema operativo.

**Ejemplo**: Una aplicación de correo electrónico y una aplicación de gestión de fotos pueden acceder a la misma base de datos aunque funcionen en sistemas operativos diferentes.

## 2. Tipos de bases de datos según el modelo de datos

### Jerárquico y en red (obsoletos)
* **Modelo jerárquico**: Estructura donde cada hijo solo puede tener un padre.
* **Modelo en red**: Estructura donde cada hijo puede tener múltiples padres.

**Ejemplo**: En un modelo jerárquico, un departamento tendría varios empleados, pero cada empleado solo pertenecería a un departamento. En un modelo en red, un empleado podría pertenecer a varios departamentos simultáneamente.

### Relacional
* Utiliza tablas para almacenar la información.
* Las tablas se relacionan entre sí mediante claves.

**Ejemplo**: Una tabla "Clientes" se relaciona con una tabla "Facturas", y esta a su vez con una tabla "Productos".

### Orientado a objetos
* Almacena la información en forma de objetos (siguiendo principios de programación orientada a objetos).
* Proporciona ventajas como encapsulación, herencia y polimorfismo.

**Ejemplo**: Una clase "Animales" podría tener atributos como número de patas o tipo de alimentación, y se podrían crear instancias como "Conejos", que heredaría estos atributos pero mantendría sus datos encapsulados.

### Documentales
* Manejan información más compleja (imágenes, vídeos).
* Utilizan documentos flexibles (JSON, XML) con pares clave-valor.
* Proporcionan mayor flexibilidad pero mayor complejidad.

**Ejemplo**: Una base de datos MongoDB que almacena documentos JSON con estructura variable para cada cliente.

## 3. Tipos de bases de datos según ubicación de la información

### Centralizadas
* Un único servidor aloja toda la base de datos.
* **Ventajas**: Gestión simple y menor coste.
* **Desventajas**: Menor escalabilidad y disponibilidad.

### Distribuidas
* Varios servidores alojan la base de datos.
* **Ventajas**: Mayor disponibilidad y escalabilidad.
* **Desventajas**: Gestión más compleja.

**Ejemplo de distribuidas**: Blockchain, donde la información está replicada en múltiples nodos, haciendo muy difícil la manipulación fraudulenta de datos.

## 4. Fragmentación de bases de datos

Técnica que mejora rendimiento y disponibilidad mediante la división de los datos.

### Tipos:
* **Fragmentación horizontal**: División por filas (registros).
* **Fragmentación vertical**: División por columnas (atributos).
* **Fragmentación por hash**: División aplicando una función matemática a los datos.
* **Fragmentación por rangos**: División por intervalos de valores.

**Ejemplo**: Una base de datos de clientes podría fragmentarse horizontalmente por años (clientes de 2024 en un servidor, clientes de 2025 en otro) o verticalmente (nombres de clientes en un servidor, países en otro).

## 5. Sistemas Gestores de Bases de Datos (SGBD)

Son aplicaciones que permiten crear y gestionar bases de datos:

* **Gestionan tablas y relaciones**
* **Ejecutan cambios**
* **Proporcionan seguridad, confidencialidad e integridad**
* **Ofrecen una interfaz gráfica**
* **Gestionan acceso múltiple**
* **Proporcionan APIs para comunicación con aplicaciones**

**Ejemplo de SGBD**: MySQL (gratuito y código abierto), PostgreSQL, Oracle.

### Tipos de SGBD:
* **Según modelo lógico**: Relacionales, orientados a objetos, etc.
* **Según usuarios**: Monousuario o multiusuario
* **Según distribución**: Centralizados o distribuidos
* **Según licencia**: Comerciales o libres

## 6. Lenguajes de consulta

El lenguaje estándar es SQL, que se divide en cuatro sublenguajes:

* **DML (Lenguaje de Manipulación de Datos)**: SELECT, INSERT, UPDATE, DELETE
* **DDL (Lenguaje de Definición de Datos)**: CREATE, ALTER, DROP
* **DCL (Lenguaje de Control de Datos)**: GRANT, REVOKE
* **TCL (Lenguaje de Control de Transacciones)**: COMMIT, ROLLBACK

**Ejemplo**: `SELECT nombre, apellido FROM clientes WHERE pais='España';` es una instrucción DML que extrae datos.

## 7. Niveles de abstracción en bases de datos

* **Nivel físico** (interno): Almacenamiento real de datos.
* **Nivel conceptual** (lógico): Tablas, atributos y relaciones.
* **Nivel de usuario**: Vistas personalizadas de los datos.

## 8. Roles en una base de datos

* **Diseñador**: Define la estructura a nivel lógico.
* **Administrador de BD**: Implementa el diseño lógico.
* **Administrador del SGBD**: Configura y mantiene el sistema gestor.
* **Programador**: Desarrolla aplicaciones que acceden a la BD.
* **Usuario final**: Utiliza la base de datos a través de aplicaciones.

## 9. Big Data

Tecnología para procesar grandes volúmenes de información con técnicas de análisis:
* **Predictivo**: Anticipa eventos futuros
* **Descriptivo**: Analiza patrones del pasado
* **Prescriptivo**: Proporciona recomendaciones

**Ejemplo**: Un sistema que analiza millones de fotografías de lunares para predecir con un porcentaje de fiabilidad si un nuevo lunar podría ser canceroso.

---

Este temario constituye la base fundamental para entender los sistemas de gestión de bases de datos, centrándose principalmente en el modelo relacional que será el foco del curso, utilizando MySQL como herramienta principal.