

# Resumen del video: ASIR - Tutoría 07/03/2025 (con ejemplos)

## Tema principal: Elaboración de documentos bien formados y ejercicios prácticos de Python

### 1. **Manipulación de cadenas en Python**
   - **Unir elementos usando `join()`:**
     ```python
     palabras = ["Hola", "mundo", "python"]
     frase = " ".join(palabras)
     print(frase)  # Resultado: "Hola mundo python"
     ```

   - **Separación de cadenas con `split()`:**
     ```python
     oracion = "Python es divertido"
     palabras = oracion.split()
     print(palabras)  # Resultado: ["Python", "es", "divertido"]
     ```

   - **Concatenación de cadenas:**
     ```python
     nombre = "Python"
     mensaje = "Me gusta programar en " + nombre
     print(mensaje)  # Resultado: "Me gusta programar en Python"
     ```

### 2. **Operaciones con números**
   - **Redondeo con `round()`:**
     ```python
     numero = 3.14159
     redondeado = round(numero, 2)
     print(redondeado)  # Resultado: 3.14
     ```

   - **Uso de la biblioteca math:**
     ```python
     import math
     
     # Redondeo hacia arriba
     print(math.ceil(3.2))  # Resultado: 4
     
     # Redondeo hacia abajo
     print(math.floor(3.2))  # Resultado: 3
     
     # Raíz cuadrada
     print(math.sqrt(16))  # Resultado: 4.0
     ```

### 3. **Formateo de números y texto**
   - **Formateo de números con decimales:**
     ```python
     precio = 19.99999
     print(f"{precio:.2f}")  # Resultado: 19.99
     ```

   - **Conversión ASCII:**
     ```python
     caracter = 'A'
     valor_ascii = ord(caracter)
     print(f"El valor ASCII de '{caracter}' es {valor_ascii}")  # Resultado: El valor ASCII de 'A' es 65
     ```

   - **Potenciación:**
     ```python
     base = 5
     exponente = 3
     resultado = base ** exponente
     print(f"{base} elevado a {exponente} es {resultado}")  # Resultado: 5 elevado a 3 es 125
     ```

### 4. **Uso de módulos y bibliotecas**
   - **Importación correcta:**
     ```python
     # Al inicio del archivo
     import math
     import random
     
     # Más adelante en el código
     numero = random.randint(1, 10)
     ```

   - **Generación de números aleatorios:**
     ```python
     import random
     
     numero_aleatorio = random.randint(1, 10)
     print(f"Número aleatorio del 1 al 10: {numero_aleatorio}")
     ```

### 5. **Conversión de tipos de datos**
   - **Número a cadena:**
     ```python
     numero = 100
     texto = str(numero)
     print(texto + " euros")  # Resultado: "100 euros"
     ```

   - **Cadena a número:**
     ```python
     cadena = "100"
     numero = int(cadena)
     resultado = numero + 50
     print(resultado)  # Resultado: 150
     ```

   - **Verificar tipo de dato:**
     ```python
     dato = 9.98
     print(f"El tipo de dato es {type(dato)}")  # Resultado: El tipo de dato es <class 'float'>
     ```

### 6. **Estructuras de datos**
   - **Eliminación de duplicados con `set()`:**
     ```python
     numeros = [1, 2, 2, 3, 4, 4, 5]
     sin_duplicados = list(set(numeros))
     print(sin_duplicados)  # Resultado: [1, 2, 3, 4, 5]
     ```

### 7. **F-Strings**
   - **Formato con F-Strings:**
     ```python
     nombre = "Mario"
     edad = 32
     
     # Método tradicional
     mensaje1 = "Hola, soy " + nombre + " y tengo " + str(edad) + " años."
     
     # Con f-strings
     mensaje2 = f"Hola, soy {nombre} y tengo {edad} años."
     
     print(mensaje2)  # Resultado: "Hola, soy Mario y tengo 32 años."
     ```

Estos ejemplos muestran de manera práctica cada uno de los conceptos explicados en el video, facilitando la comprensión de las herramientas y técnicas que Python ofrece para la manipulación de datos y la programación eficiente.