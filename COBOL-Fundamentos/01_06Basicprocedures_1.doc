Hola. Soy Kevin White. Bienvenido a The Basic Procedimientos, parte 1. Durante esta lección, vas a poder identificar declaraciones, oraciones, párrafos, y secciones, comprenda el alcance se utilizan terminadores, sepa cómo codificar la inicialización declaración y su propósito, y cómo utilizar qué denominamos declaraciones de apertura, cierre, lectura y escritura. La división de procedimientos consiste de comentarios, declaraciones, frases, terminaciones del alcance, párrafos y secciones. En este ejemplo se muestra cómo es la primera línea en realidad es un comentario. ¿Ves ese asterisco ¿En el lado izquierdo? Bueno, si esto está dentro posición número 7, entonces va a tratar eso línea completa como comentario. Esa línea no sirve nada más que decirnos cuándo se puso juntos en febrero. Ahora las declaraciones son las siguientes. Combinan palabras y símbolos que causan acción que va a ocurrir. Hay una declaración MOVE que puedes ver. También puedes ver una sentencia IF, así como una sentencia PERFORM Proceso de febrero. Las oraciones contienen una o más declaraciones terminadas con un punto. En este ejemplo, puede ver el carácter de punto que aparece después el contador total de palabras. Ahora, a veces, viendo este período es muy difícil y no estás seguro si está ahí o no. Por eso hay otra forma que puedes usar para terminar las oraciones. Esto nos lleva a terminadores de alcance. El uso de la independencia sobre el plazo para finalizar una acción es exclusivo de COBOL, al igual que otros idiomas tienen cosas como puntas y punto y coma. El alcance de un verbo permanece en vigor hasta que se alcanza un punto o se encuentra lo demás. Esto se llama implícito terminación del verbo en COBOL. Terminación explícita del El verbo ocurre cuando usamos un terminador de alcance en su lugar de escribir un punto. El terminador del alcance consiste en de la palabra final, E-N-D, que significa que este es el final, seguido de un guión y del verbo de acción que es en realidad está siendo terminado. Esta es una lista parcial de los 18 terminadores de alcance que tenemos disponibles en COBOL. Como puede ver, todos empieza con E-N-D y luego un guión y ¿qué están intentando terminar. ¿Qué es un párrafo? Un párrafo es uno o más oraciones relacionadas lógicamente agrupadas físicamente juntos en una rutina independiente y autónoma. Los párrafos están codificados en lo que llamamos el margen A, que comienza con el nombre, formado por letras y números y debe ser único de todos los demás nombres del programa. Cada párrafo termina con un punto antes de que comience el siguiente párrafo. ¿Qué es una sección? Al igual que los párrafos, una sección es, lógicamente, una o varias oraciones relacionadas agrupadas físicamente. Empieza con un encabezado en el margen A, seguido de una sección y un punto. Cada sección termina con un punto antes del comienza la siguiente sección. Echemos un vistazo a la estructura de un programa COBOL. Obtenga una visión general aquí. Leyendo de arriba a abajo, el programa COBOL está hecho compuesto por cuatro divisiones. Puede que los recuerdes como división de identificación, división de medio ambiente , división de datos y división de procedimientos. Ahora la división de procedimientos puede tener secciones, aunque la mayoría no las tiene. Puede esperar el procedimiento división para contener cosas como párrafos que contiene oraciones, que contienen declaraciones que utilizan tanto palabras reservadas como palabras definidas por el usuario. Las palabras, como saben, contienen caracteres. Initialize es una de las comandos que usamos. Le da un valor al trabajo campos de datos de almacenamiento, que es una alternativa al uso de la cláusula de valor que vimos en el segmento anterior. La inicialización no se puede usar para los archivos de la sección de vinculación.
Play video starting at :4:52 and follow transcript4:52
Los ejemplos en la parte inferior de nuestra pantalla muestran inicializa el área de trabajo. Esta área de trabajo tiene contiene dos artículos. Uno es una imagen x y otro tiene una imagen 9 al lado. El que tiene los nueves es va a tener ceros ahí y los que son x van a tener espacios. Lo segundo que vemos en esta pantalla vemos inicializar el contador 2 reemplazando el número por uno. El número uno va para ser colocado ahí, no un cero o un espacio. Ahora, los comandos de entrada y salida aparecerán en tu pantalla momentáneamente. Gobiernan el flujo de datos desde y hacia dispositivos externos y permiten el almacenamiento, la recuperación y la actualización de los archivos. Echemos un vistazo a los cuatro. Tenemos el formulario abierto que prepara uno o más archivos para su procesamiento. El cierre, que pone fin al procesamiento de uno o más archivos. Tenemos la lectura de eso recupera un registro del archivo y una escritura que envía un registro del archivo. Echemos un vistazo a estos uno a la vez. El comando open identifica los archivos como: entrada o salida. Este primer ejemplo tiene dos archivos, el archivo maestro y el archivo mensual, identificados como archivos de entrada, y coloca un punto al final. El segundo ejemplo en esta pantalla hay un archivo llamado out-file, que es un archivo de salida con una terminación explícita de este comando debido a un terminador de alcance. Observe en un ejemplo que se está utilizando el punto. En el otro ejemplo, el terminador de alcance se está utilizando. Ambos funcionan muy bien. La mayoría de la gente piensa que tener el terminador telescópico es es más fácil ver y trabajar con él. Ahora, ¿qué es lo opuesto a abrir? Bueno, creo que está cerca. Cerrar ya termina procesamiento de uno o más archivos. Todos los archivos que se abran deben cerrarse antes de el programa termine de ejecutarse. De lo contrario, podrías tener algunos problemas difíciles. En la parte superior de la pantalla, verá dos archivos, el archivo maestro y el archivo mensual. Se están cerrando usando la terminación implícita, que es poner un punto al final. En el segundo ejemplo, hay cuatro archivos que se cierran con una terminación explícita del ámbito terminator y close, los cuales, una vez más, recomendamos usar. El comando read recupera un registro a la vez de un archivo externo y lo almacena en un registro de datos situado debajo del archivo descripción o entrada FD. Este diagrama muestra los registros que se están recuperando. Se pueden almacenar en más más de un lugar, dos lugares. Esto sucede cuando se usa la información cercana para poder guardarla en ambos lugares. La instrucción leída tiene opciones que pueden detectar si hay no hay más registros. A eso se le llama at-end y detecta que cuando quedan más registros, se denomina non-at-end. En este ejemplo, estamos viendo, cuando el lector encuentra el final de un archivo. En otras palabras, el final, el número uno es almacenado en el extremo del interruptor. Tenemos el siguiente ejemplo, si la lectura no Si leemos el registro final, el número uno se añadirá al recuento de empleados. La escritura es la opuesto a la lectura. Envía un registro desde el área de registro de salida en el FD al archivo externo. Mira este ejemplo y te darás cuenta de que la sintaxis para escribir es diferente a leer. Me alegro por ti. Escribir requiere usar el nombre del registro. En este ejemplo, el nombre del registro es más bien el registro del empleado que el nombre del archivo. Un par de cosas más. En este ejemplo, tenemos un comando de escritura que transfiere los datos del almacenamiento de trabajo a los datos graba primero debajo del FD, pero también lo escribe en el también en un archivo externo. Hemos cubierto un hay muchas cosas aquí. Para empezar, vamos a simplemente revise lo que hemos hecho. Durante esta sección hemos aprendido a hacer cosas como identificar declaraciones, oraciones, párrafos, y secciones. Analizamos detenidamente cómo usar terminadores de alcance porque son una buena opción como alternativa a utilizando el punto. También hemos analizado la codificación de la sentencia de inicialización y el propósito de usarla. Por último, pero no por ello menos importante, echamos un vistazo a las entradas y los resultados que tenemos, las declaraciones llamadas abrir, cerrar , leer y escribir. Cuídate ahora.