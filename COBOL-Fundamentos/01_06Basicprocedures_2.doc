Este es Kevin White. Bienvenido a los procedimientos básicos, parte 2. Durante esta lección, podrás utilizar sentencias IO, aceptar y mostrar, recuperar un volumen bajo datos, incluidos la fecha , el día y la hora, utilizando algo llamado una función intrínseca. Eso solo significa que está incorporado llamada fecha actual, también vas a para poder usar y entender el diferencia entre el comando de retroceso y el comando stop run. Comandos de entrada y salida, ¿ recuerdas de nuestra última lección, comandos de entrada y salida gobiernan el flujo de datos hacia y desde dispositivos externos y permiten el almacenamiento, la recuperación y la actualización de los archivos. En esta lección, vamos conocer excepto y mostrar excepto es lo que recupera datos especiales de bajo volumen de una fuente externa. Luego está la pantalla que envía datos de bajo valor a una fuente externa. El comando accept, vamos mira esto primero. Recupera datos de bajo volumen de una fuente externa, cosas como la fecha, el día, el día de la semana y la hora. El único inconveniente es que en el estándar ANSI-74, solo tenemos seis dígitos en lugar de ocho dígitos. Ahora el segundo comando es el comando accept vuelve a hablarnos de cómo podemos obtener datos de tres otras fuentes. Podemos obtenerlo de dispositivo de entrada del sistema, que en JCL sería SYSIN. También puede obtener información de un lector de tarjetas externo y también está la consola. Veamos algunos ejemplos en las próximas dos páginas. Aquí hay algunos que aceptan ejemplos de comandos, el primer ejemplo copia el año, el mes y el día de dos dígitos desde de la fecha al registro de fecha de ejecución. El segundo ejemplo copia el año de dos dígitos y el día de tres dígitos hasta el día juliano. El día de la semana contiene un número entero en el rango de uno a siete que representa cada día de la semana, empezando por el lunes como el día número uno, y terminando el domingo como el día número siete. Veamos un ejemplo, en la división de datos, creamos dos elementos elementales para almacenar el día y el nombre. En la división de procedimientos, obtenemos un solo número cuatro días de la semana. Ese es el uno-siete. Entonces, dependiendo de el número al que movemos , la información del día correcto al día de la semana. Ahora la fecha actual es una función intrínseca integrado en COBOL. Almacena 21 caracteres de la fecha y hora actuales. Este gráfico con mucho de la información que contiene, te muestra el propósito de cada artículo y demás detalles desde el año, el mes , el día, hasta revele qué tan adelantada o atrasada está esta hora en comparación con Mientras tanto, en Greenwich, ¿cómo podemos obtener la información actual ¿Fecha de ingreso a un programa COBOL? Al observar este diagrama, hay muchos campos en niveles de 1,5 y 10. Podemos usar cualquiera de estos. lo que haremos es recuperar todos los datos actuales y guárdelos en la sección de almacenamiento de trabajo con el comando en parte inferior de la página. El comando para en la parte inferior de la página se encuentra el comando mover eso moverá la función llamada current fecha hasta mi fecha actual. Ahora tu fecha actual se almacena de forma segura en www-curr-date, ¿verdad en el medio. Como dijimos anteriormente, COBOL es de hecho una palabra lenguaje comparado con C, que solo necesita tres líneas de código para actualizarse fecha y hora, o java, que tal vez toma cinco líneas. En este ejemplo, aunque la fecha actual se almacene 21 caracteres, solo nos interesan los primeros ocho personajes. Estos se almacenan en en el centro de la pantalla hay 05 campos del año, el mes y el día. Supongamos que solo necesitabas obtenga la fecha actual en formato de año, mes y fecha. Mira lo que está codificado en la parte superior, ahí está lo que se mueve otra vez, la declaración de movimiento limita los datos actuales de la función a la primera ocho números, uno-ocho. Suponga que solo necesita obtener la hora actual en formato de horas, minutos y segundos. Tenemos la declaración de la jugada otra vez empezará en la posición nueve de la fecha actual. Para una longitud de seis números, el comando display envía información a archivo de salida del sistema. Este ejemplo puede resultar útil para aprender a probar o depurar un programa. Porque el comando display enviará campos de datos y literales a la salida del sistema archivo que puede consultar para resolver cualquier problema. El comando go-back es un comando que termina el ejecución del programa. En otras palabras, programa, has acabado. Ahora el control desaparecerá volver a un programa anterior si es un programa anterior había llamado a este programa. Digamos que este programa se llama programa B, y fue llamado por el programa A. La vuelta nos llevará del programa B al A, si es que eso es lo que pasó. Sin embargo, si el programa se ejecuta por sí solo, simplemente se detiene. Ahora hay otro comando llamado stop run. Observe que son dos palabras, no hay ningún guión entre ellas. Simplemente deja de correr y esto termina la ejecución del programa pase lo que pase. El control no va a desaparecer volver a un programa anterior, incluso si lo había primero, simplemente se detiene. Durante esta lección, aprendí a utilizar las instrucciones IO Accept and display. También hemos echado un vistazo a recuperar datos de bajo volumen, incluidos la fecha, el día y la hora, mediante la función intrínseca denominada fecha actual. Además, hemos aprendido a usar y entender la diferencia entre la afirmación de retroceso que tiene dos cosas posibles eso podría suceder, y también el comando stop run, que solo tiene una opción. Hemos acabado y de hecho, hemos acabado aquí con la segunda parte de los procedimientos básicos.