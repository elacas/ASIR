Bienvenido a Basic COBOL. Durante esta lección, entenderemos el nacimiento de COBOL, el propósito de COBOL, cómo COBOL puede servir a una amplia gama de las empresas y la verbosidad. Eso significa un montón de palabras que usa COBOL. También descubriremos la evolución de COBOL.
Reproduce el video desde ::26 y sigue la transcripción0:26
No hace mucho, un gobernador en crisis tenía un problema de TI y estaba buscando personas que conocieran COBOL. Al parecer, el personal tenía un mínimo experiencia con COBOL y no pudimos ayudar al gobernador a traer ayuda a la gente de su estado. Afortunadamente, esta historia tiene un final feliz. El gobernador encontró héroes de TI, es decir, personas competentes en la aplicación práctica de COBOL, y pudieron resolverla resolver el problema y salvar el día. Estas lecciones le ayudarán a empezar. Nuestro curso incluye un estudio de caso mostrando cómo ayudar a una pequeña empresa a mantenerse al día con su empresa en crecimiento y nómina utilizando COBOL. Nuestro objetivo es ayudarlo a estar preparado la próxima vez una organización sin fines de lucro, una empresa o tal vez incluso un gobernador necesita tus habilidades. Entonces, ¿qué es COBOL?
Reproduce el video desde :1:28 y sigue la transcripción1:28
La mayoría de las personas que toman este curso son más jóvenes que COBOL. COBOL fue creado en 1959 por personas que se reunieron en el Pentágono de los Estados Unidos. El Departamento de Defensa creó especificaciones similares a las de un lenguaje denominado lenguaje FLOW-MATIC. Contralmirante Grace Hopper, también conocido como Amazing Grace, fue el desarrollador principal de FLOW-MATIC y de COBOL. COBOL es un acrónimo de lenguaje común orientado a los negocios. Fue diseñado principalmente para la comunidad empresarial y, por lo tanto, es muy utilizado por los bancos, fabricantes, seguros, constructores y muchas más empresas. COBOL se ha convertido en el dominante lenguaje de programación para empresas , procesamiento empresarial y transacciones financieras. Además, COBOL fue diseñado para ser similar al inglés, autodocumentarse y ser independiente de las máquinas. En la actualidad, COBOL está disponible en muchos sistemas operativos, algunos de los cuales son IBM, Computer Associates, Fujitsu y Micro Focus.
Reproduce el video desde :2:53 y sigue la transcripción2:53
Hablemos de la verbosidad. De hecho, COBOL es prolijo, al igual que algunos amigos que tenemos. Usa más palabras que la mayoría de los idiomas. La verbosidad simplemente significa muchas palabras. Pero ayuda a mejorar la precisión, profundidad y detalle. La verbosidad hace que el mantenimiento de El código COBOL es más comprensible y, en algunos casos, produce código de autodocumentación.
Reproduce el video desde :3:25 y sigue la transcripción3:25
Supongamos que desea crear un programa eso diría hola mundo, ¿qué idioma usarías? Sí, la mayoría de la gente usaría Java. Aquí no hay mucha programación, pero comparemos Java con COBOL.
Reproduce el video desde :3:41 y sigue la transcripción3:41
Muchas palabras. Existe esa verbosidad.
Reproduce el video desde :3:45 y sigue la transcripción3:45
Echemos un vistazo al desarrollo de COBOL. Te preguntarás, ¿lo hizo Grace Hopper gana millones de dólares después de crear esta cosa llamada COBOL, como ¿Zuckerberg, Musk o Bill Gates lo hicieron? No, no, no, no. Se lo entregó a el Instituto Nacional Estadounidense de Estándares, también conocido como ANSI, que lleva un registro de normas y reglamentos técnicos.
Reproduce el video desde :4:13 y sigue la transcripción4:13
COBOL ha evolucionado a través de de los años a diferentes versiones. Ahora, a medida que COBOL ha evolucionado, ha llegado IBM con nuevos nombres para cada versión. Adivina cuál vamos a usar, usaremos el mejor y más reciente, Enterprise COBOL for z/OS.
Reproduce el video desde :4:31 y sigue la transcripción4:31
Ahora, aprendiendo COBOL, nuestro enfoque es para empezar con una descripción general de COBOL. Primero aprenderemos algunas de las características del lenguaje, seguiremos escribiendo un sencillo programa, en realidad, unos cuantos programas sencillos. Eso nos da la oportunidad de convertirnos estamos más familiarizados con el idioma, y vamos a explorar la importancia de programación estructurada. Gastarás una parte importante de su tiempo leyendo material adicional, así como escribiendo, probando, y programas en ejecución. Puede esperar tener un buen conocimiento de lo esencial de COBOL al completar este curso.
Reproduce el video desde :5:12 y sigue la transcripción5:12
Así que déjame repasar. Hemos llegado a conocer un poco a COBOL, el nacimiento de COBOL 1959, la influencia del contralmirante Grace Hopper, el propósito de COBOL es servir a todo tipo de empresas, las palabras adicionales que usa COBOL. Y el desarrollo de COBOL con la ayuda de un grupo de buceadores voluntarios que trabajan para el Instituto Nacional de Estándares de los Estados Unidos. Eso es lo que ha creado COBOL incluso mejor con el tiempo. Nos volveremos a ver pronto.

COBOL es un lenguaje muy estructurado. Cada programa se divide en partes discretas llamadas divisiones. Cada división tiene su propia función dentro de un programa COBOL. Una división puede subdividirse en secciones y párrafos como un informe. ¿Cuántas divisiones tiene COBOL? Vamos a averiguarlo. Bienvenidos de nuevo. Durante esta lección, vamos a aprender a descubrir la posición y el valor de las cuatro divisiones de COBOL. Vamos a codificar la identificación, la división de entorno y la división de datos. Vamos a navegar por la estructura de columnas de COBOL y comprender el propósito del compilador. Antes aprendimos que la inventora del lenguaje COBOL fue una militar, la almirante Grace Hopper. Si una militar crea un lenguaje informático, es de esperar una cuidadosa colocación en un conjunto de divisiones. Los programas COBOL utilizan cuatro divisiones. Estas son la división de identificación, la división de entorno, la división de datos, y la división de procedimiento. La división de identificación contiene el nombre del programa, el autor, la fecha en que fue escrito, y alguna otra información útil. La división de entorno describe el hardware del ordenador y la información de archivos externos. La división de datos nos da descripciones de archivos de entrada, archivos de salida y variables de trabajo utilizadas en el código. Luego la división de procedimiento contiene las instrucciones lógicas o código del programa. Con la división de identificación, tenemos alguna información sobre el programa. En este diagrama, en la primera línea, descubrimos que el empleado 54 es el nombre del programa, también conocido como ID del programa. La autora es Emelyn Eustace. El lugar de instalación está en New Hampshire. Eso significa que es allí donde está el ordenador, y que fue escrito el 12 de enero de 2021. La división de entorno también es bastante sencilla. La sección de configuración describe el equipo host donde se compilará y ejecutará el programa. Puede verse IBM 370. La sección de entrada salida comienza con la sentencia de control de archivos. Cada sentencia select conecta un archivo de programa con su dispositivo de hardware externo. Por ejemplo, archivo de empleado en. Ese es el nombre del fichero interno que se va a conectar a MPIN, el nombre del fichero externo
Reproduce el video desde :2:19 y sigue la transcripción2:19
En Zoess, COBOL MPIN sería una etiqueta de sentencia JCLDD, seguida de DSN dataset name. Report 1 file out es el nombre del fichero interno que se conecta al fichero externo conocido como Report 1. Ahora, también hay algo llamado file status. Esto es realmente importante porque termina con lo que se llama código de estado. En una lección posterior, mostraremos cómo el código de estado es muy útil para depurar un programa. La división de datos tiene tres secciones que describen en detalle todos los archivos de datos utilizados por el programa. La sección de archivos describe los archivos externos con más detalle que la sección de entorno lo hace. Como el tamaño de un registro, si los registros son o no de diferentes tamaños, o tienen exactamente el mismo tamaño en bytes. Más detalles en una futura lección. La sección de almacenamiento de trabajo describe las definiciones de los registros de datos que son temporales, junto con cualquier variable utilizada por el código del programa. Se almacenan dentro del programa COBOL en esta ubicación específica. La sección de vinculación define los datos que se recibirán de otro programa externo. Más detalles en una futura lección. Una lección entera se va a dedicar al tema de la división de procedimientos. Nos sumergiremos en esa lección un poco más adelante. Ahora, imagina un aparcamiento. Probablemente has conducido a uno. Imagina uno que tiene 80 plazas para aparcar coches. Algunas de las plazas de aparcamiento están reservadas para personas especiales. Veamos las columnas COBOL, que son similares a un aparcamiento. Las primeras seis columnas son sólo para números de secuencia. No todo el mundo utiliza números de secuencia, por lo que a veces las columnas 1 a 6 estarán completamente vacías. La columna 7 se puede utilizar para tres propósitos diferentes. Para comentarios, para la continuación, o para una alimentación de formulario, al imprimir el listado de compilación. Más sobre esto más adelante. Las columnas 8 a 11 se conoce como el margen A. Sólo seis elementos pueden colocarse allí. Cabeceras de división y sección, nombres de párrafo, definiciones de nivel de 01 o 77, 01 denota una estructura de datos, 77 denota una única variable o elemento de datos en el almacenamiento de trabajo, y descripciones de archivo también conocidas como FDs. Las columnas 12 a 72 son para la definición de datos que no sean unos o sietes y verbos. Más adelante sobre esto. Las columnas 73 a 80 es donde los números de secuencia estándar pueden ser codificados para su uso por IBM utilidad IEBUPDTE para hacer cambios o inserciones en el programa por lotes si hay algo en absoluto, ya que por lo general se deja en blanco. Ahora, usted pasará la mayor parte de su tiempo codificando en lo que se llama el margen A, que usted ve en el centro de la pantalla, y el margen B a la derecha del margen A. Ésas son las columnas número 8 a 11 y 12 a 72. Usted aprenderá en lecciones posteriores qué son todas estas cosas diferentes y cómo se utilizan. Siéntase libre de hacer una pausa por un momento y echar un vistazo a esto.